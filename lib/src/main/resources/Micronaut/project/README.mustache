# {{artifactId}}

{{appName}}

- API version: {{appVersion}}
{{^hideGenerationTimestamp}}

- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}

{{#appDescriptionWithNewLines}}{{{appDescriptionWithNewLines}}}{{/appDescriptionWithNewLines}}

{{#infoUrl}}
  For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

*Automatically generated by the [OpenAPI Generator](https://openapi-generator.tech)*

## Requirements

Building the API client library requires:

1. Java 13+

## Installation

To install the API client library to your local Maven repository, simply execute:

```shell
./gradlew build
```

### Gradle users

Add this dependency to your project's build file:

```kotlin
implementation("{{{groupId}}}:{{{artifactId}}}:{{{artifactVersion}}}")
```

### Maven users

Add this dependency to your project's POM:

```xml
<dependency>
  <groupId>{{{groupId}}}</groupId>
  <artifactId>{{{artifactId}}}</artifactId>
  <version>{{{artifactVersion}}}</version>
  <scope>compile</scope>
</dependency>
```

## Usage

This library must be used in conjunction with [Micronaut](https://docs.micronaut.io/latest/guide/).


The generated clients take advantage of [Micronaut's service discovery](https://docs.micronaut.io/latest/guide/#serviceDiscovery). To use manual discovery, configure the service URL in your **application.yml**:

```
micronaut:
  http:
    services:
      {{clientId}}:
        urls:
          - "https://my-service"
```

Finally, inject any `MyServiceApiClient` class and use the provided methods! They should reflect your API spec.

Everything that applies to [HTTP clients](https://docs.micronaut.io/latest/guide/#httpClient) in Micronaut's documentation can be leveraged here.

## Publication

To publish, configure your target repositories and simply run.

```shell
./gradlew build publish
```

It is possible to create a `local.build.gradle.kts` and `local.settings.gradle.kts` files that will not be overridden by the generator. You can add your publication configs in those files.

> **WARNING**
> Only the main project build scripts and precompiled project script plugins have type-safe model accessors. As a result, the `local.*.gradle.kts` files are affected by this limitation.
> Initialization scripts, settings scripts, script plugins do not.
> These limitations will be removed in a future Gradle release.
> See https://docs.gradle.org/7.1.1/userguide/kotlin_dsl.html#type-safe-accessors for more details.

## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{commonPath}}{{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation for Models

{{#models}}{{#model}} - [{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}

## Documentation for Authorization

{{^authMethods}}All endpoints do not require authorization.
{{/authMethods}}Authentication schemes defined for the API:
{{#authMethods}}### {{name}}

{{#isApiKey}}

- **Type**: API key
- **API key parameter name**: {{keyParamName}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}

- **Type**: HTTP basic authentication
{{/isBasic}}
{{#isOAuth}}

- **Type**: OAuth
- **Flow**: {{flow}}
- **Authorization URL**: {{authorizationUrl}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}  - {{scope}}: {{description}}
{{/scopes}}
{{/isOAuth}}

{{/authMethods}}

## Recommendation

It's recommended to create an instance of `ApiClient` per thread in a multithreaded environment to avoid any potential issues.

## Author

{{#apiInfo}}{{#apis}}{{#-last}}{{infoEmail}}
{{/-last}}{{/apis}}{{/apiInfo}}
